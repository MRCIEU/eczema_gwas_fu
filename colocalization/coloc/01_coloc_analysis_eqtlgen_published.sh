#!/bin/bash
HOME=/panfs/panasas01/sscm/qh18484
analysis=$HOME/analysis/colocalization/coloc/eqtlgen/published
scripts=$HOME/bin/eczema_gwas_fu/colocalization/coloc
gwas=/panfs/panasas01/sscm/qh18484/data/gwas/paternoster2015
eqtlgen=/panfs/panasas01/sscm/qh18484/data/eqtl/eQTLgen
utils=$HOME/bin/eczema_gwas_fu/utils

eqtl_f=eQTLsFDR-ProbeLevel.txt.gz
gwas_f=results.published.tsv
#Generate coloc input for all loci in the GWAS.
#Consider cis-eQTL within 100kbp, 250kbp and 1Mbp within TSS
cd $analysis
python $scripts/generate_index_snp_locations.py paternoster2015_snps.txt $gwas/$gwas_f
#Sort numerically by chrom and pos.
sort -k2,2n -k3,3n  paternoster_2015_index_snps.txt >paternoster_2015_index_snps_sorted.txt
cp paternoster_2015_index_snps_sorted.txt $gwas
#Export eQTLgen results in a given interval.
for my_int in 10 100 250 1000
do
python $scripts/generate_eqtl_input_pvals.py --tab $eqtlgen/$eqtl_f \
--proces paternoster_2015_index_snps_sorted.txt --interval $my_int --chrom 3 --pos 4 --pval 1 --ident 2
done

#Export GWAS results in a given interval.
for my_int in 10 100 250 1000
do
python $scripts/generate_gwas_input.py --tab $gwas/$gwas_f \
--proces paternoster_2015_index_snps_sorted.txt --interval $my_int --chrom 2 --pos 3 --eaf 6 --ident 1 

done

#####Diagnostics##########################################################
zcat $eqtlgen/$eqtl_f | tr '/' '\t' | awk -v OFS="\t" '{print $3, $2, 0, $4, $9, $10}' | sed 's/^0//' | tail -n +2 >diagnostics/${eqtl_f%.txt.gz}.bim
#Remove duplicate lines due to multiple eQTLs per SNP position. Remove padding 0s for chromosomes to compare with Eczema GWAS.
sort diagnostics/${eqtl_f%.txt.gz}.bim | uniq >diagnostics/${eqtl_f%.txt.gz}_unique.bim  
cat $gwas/$gwas_f | awk -v OFS="\t" '{print $2, $1, 0, $3, $4, $5}' | tail -n +2 >diagnostics/${gwas_f%.tsv}.bim

#Marker QC diagnosis between GWAS and SNP dataset.
cd diagnostics
python $utils/compare_bim_files_pos.py ${gwas_f%.tsv}.bim ${eqtl_f%.txt.gz}_unique.bim  >eQTLgen_GWAS_diagnosis
cd ../
#Only four SNPs show allele mismatch
############################################################################


#Run coloc on all input files
for my_input in *.eqtl
do
Rscript $scripts/coloc_eqtlgen.R ${my_input%.eqtl}.gwas $my_input 
done

#Subset to only results with robust support for colocalisation (p > 0.75)
for my_input in *.coloc
do
awk '{if (NR==1) ; else if ($15 > 0.75 && $15 <= 1) print $0}' $my_input >${my_input%.coloc}.sig
done

#Subset to only results with significant support for colocalisation (p > 0.95 )
for my_input in *.coloc
do
awk -F '\t' '{if (NR==1) ; else if ($15 > 0.95 && $15 <= 1) print $0}' $my_input >${my_input%.coloc}.sig95
done

#Generate a transcript annotation table with all variant-gene associations above a certain significance threshold.
#Of course, terminates prematurely without giving warning!! 
#qsub -v eqtl_results=$eqtlgen/$eqtl_f,threshold="10e-20" $scripts/sub_annotate_eqtlgen.sh
qsub $scripts/sub_annotate_eqtlgen_e20.sh 
#Run this in the manual mode.

#After talking to Urmo Vosa, decided to run an additional check to see if transcript mappings 
#to probes match in two files provided.
python $scripts/eqtlgen_mapping_check.py --tab $eqtlgen/$eqtl_f \
--proces $eqtlgen/ProbeAnnotation2_CorrectlyMapped_mapping_annotations_added_20170301.txt \
--tab_keys 5 --tab_vals 17 --proces_keys 1 --proces_vals 5

#Finally, checking that all values in the SNPName column in $eqtl_F are unique:
#[qh18484@newblue4 eQTLgen]$ wc eQTLsFDR-ProbeLevel.txt.gz_10e-20.annotable
#  1417001   2834002 177098600 eQTLsFDR-ProbeLevel.txt.gz_10e-20.annotable
#[qh18484@newblue4 eQTLgen]$ cat eQTLsFDR-ProbeLevel.txt.gz_10e-20.annotable | cut -f1 | sort | uniq
#[qh18484@newblue4 eQTLgen]$ cat eQTLsFDR-ProbeLevel.txt.gz_10e-20.annotable | cut -f1 | sort | uniq | wc
#1417001 1417001 14964017
#This means that mappings generated by sub_annotate_eqtlgen_e20.sh are correct.

#Annotate all the loci with significant probability of colocalisation (p> 0.75) between SNP in the GWAS interval and eQTL 
#with the transcript ID potentially affected
for a in *.sig
do
python $scripts/annotate_eqtlgen.py $a $eqtlgen/eQTLsFDR-ProbeLevel.txt.gz_10e-20.annotable
done

#Same, but for p>0.95
for a in *.sig95
do
python $scripts/annotate_eqtlgen.py $a $eqtlgen/eQTLsFDR-ProbeLevel.txt.gz_10e-20.annotable
done

#Same, but for all
for a in *.coloc
do
python $scripts/annotate_eqtlgen.py $a $eqtlgen/eQTLsFDR-ProbeLevel.txt.gz_10e-20.annotable
done

#Annotate loci with Ensembl.
qsub $scripts/sub_ensembl_coloc_sig.sh
qsub $scripts/sub_ensembl_coloc_all.sh

#Generate scripts for LocusZoom plots - all, and various thresholds of significance.
for my_snps in rs61813875 rs10791824 rs6419573 rs12188917 rs2212434 rs2918307 rs4809219 rs4713555 rs2041733 rs2944542 rs145809981 rs6827756 rs12730935 rs4312054 rs1249910 rs2592555 rs7127307 rs2038255 rs6602364 rs6473227 rs7512552 rs112111458 rs7625909 rs4643526 rs10199605 rs10214237 rs12951971 rs1057258 rs6872156 rs7016497 rs2905493 rs1799986 rs2227483 rs7146581 rs11657987 rs77714197 rs3917265 rs13152362 rs4705962 rs2218565 rs7512552 rs12730935 rs12295535 rs11923593 rs2143950 rs17881320
do
for my_int in 10 100 250 1000
do
python $utils/create_batch_scripts.py $scripts/locus_zoom_coloc.sh sub_locus_zoom_${my_snps}_${my_int}kbp.coloc.sh input_file=${my_snps}_${my_int}kbp.coloc my_ref=$my_snps my_flank=${my_int}kb my_prefix=${my_snps}_${my_int}kbp.coloc
done 
done

for my_snps in rs61813875 rs10791824 rs6419573 rs12188917 rs2212434 rs2918307 rs4809219 rs4713555 rs2041733 rs2944542 rs145809981 rs6827756 rs12730935 rs4312054 rs1249910 rs2592555 rs7127307 rs2038255 rs6602364 rs6473227 rs7512552 rs112111458 rs7625909 rs4643526 rs10199605 rs10214237 rs12951971 rs1057258 rs6872156 rs7016497 rs2905493 rs1799986 rs2227483 rs7146581 rs11657987 rs77714197 rs3917265 rs13152362 rs4705962 rs2218565 rs7512552 rs12730935 rs12295535 rs11923593 rs2143950 rs17881320
do
for my_int in 10 100 250 1000
do
python $utils/create_batch_scripts.py $scripts/locus_zoom_coloc.sh sub_locus_zoom_${my_snps}_${my_int}kbp.sig.sh input_file=${my_snps}_${my_int}kbp.sig my_ref=$my_snps my_flank=${my_int}kb my_prefix=${my_snps}_${my_int}kbp.sig
done 
done

for my_snps in rs61813875 rs10791824 rs6419573 rs12188917 rs2212434 rs2918307 rs4809219 rs4713555 rs2041733 rs2944542 rs145809981 rs6827756 rs12730935 rs4312054 rs1249910 rs2592555 rs7127307 rs2038255 rs6602364 rs6473227 rs7512552 rs112111458 rs7625909 rs4643526 rs10199605 rs10214237 rs12951971 rs1057258 rs6872156 rs7016497 rs2905493 rs1799986 rs2227483 rs7146581 rs11657987 rs77714197 rs3917265 rs13152362 rs4705962 rs2218565 rs7512552 rs12730935 rs12295535 rs11923593 rs2143950 rs17881320
do
for my_int in 10 100 250 1000
do
python $utils/create_batch_scripts.py $scripts/locus_zoom_coloc.sh sub_locus_zoom_${my_snps}_${my_int}kbp.sig95.sh input_file=${my_snps}_${my_int}kbp.sig95 my_ref=$my_snps my_flank=${my_int}kb my_prefix=${my_snps}_${my_int}kbp.sig95
done 
done

#Submit those jobs
for my_snps in rs61813875 rs10791824 rs6419573 rs12188917 rs2212434 rs2918307 rs4809219 rs4713555 rs2041733 rs2944542 rs145809981 rs6827756 rs12730935 rs4312054 rs1249910 rs2592555 rs7127307 rs2038255 rs6602364 rs6473227 rs7512552 rs112111458 rs7625909 rs4643526 rs10199605 rs10214237 rs12951971 rs1057258 rs6872156 rs7016497 rs2905493 rs1799986 rs2227483 rs7146581 rs11657987 rs77714197 rs3917265 rs13152362 rs4705962 rs2218565 rs7512552 rs12730935 rs12295535 rs11923593 rs2143950 rs17881320
do
for my_int in 10 100 250 1000
do
qsub sub_locus_zoom_${my_snps}_${my_int}kbp.coloc.sh 
done 
done

for my_snps in rs61813875 rs10791824 rs6419573 rs12188917 rs2212434 rs2918307 rs4809219 rs4713555 rs2041733 rs2944542 rs145809981 rs6827756 rs12730935 rs4312054 rs1249910 rs2592555 rs7127307 rs2038255 rs6602364 rs6473227 rs7512552 rs112111458 rs7625909 rs4643526 rs10199605 rs10214237 rs12951971 rs1057258 rs6872156 rs7016497 rs2905493 rs1799986 rs2227483 rs7146581 rs11657987 rs77714197 rs3917265 rs13152362 rs4705962 rs2218565 rs7512552 rs12730935 rs12295535 rs11923593 rs2143950 rs17881320
do
for my_int in 10 100 250 1000
do
qsub sub_locus_zoom_${my_snps}_${my_int}kbp.sig.sh 
done 
done

for my_snps in rs61813875 rs10791824 rs6419573 rs12188917 rs2212434 rs2918307 rs4809219 rs4713555 rs2041733 rs2944542 rs145809981 rs6827756 rs12730935 rs4312054 rs1249910 rs2592555 rs7127307 rs2038255 rs6602364 rs6473227 rs7512552 rs112111458 rs7625909 rs4643526 rs10199605 rs10214237 rs12951971 rs1057258 rs6872156 rs7016497 rs2905493 rs1799986 rs2227483 rs7146581 rs11657987 rs77714197 rs3917265 rs13152362 rs4705962 rs2218565 rs7512552 rs12730935 rs12295535 rs11923593 rs2143950 rs17881320
do
for my_int in 10 100 250 1000
do
qsub sub_locus_zoom_${my_snps}_${my_int}kbp.sig95.sh 
done 
done

#Compress results into archive for sharing.
tar cvzf eqtlgen_coloc.tar.gz rs*